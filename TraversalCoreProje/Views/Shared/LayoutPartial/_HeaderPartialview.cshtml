  <!--header-->
@model TraversalCoreProje.Models.LoginModel
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=account_circle" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@40,400,0,0&icon_names=account_circle" />
<style>
    .material-symbols-outlined {
        font-variation-settings: 'FILL' 0, 'wght' 500, 'GRAD' 0, 'opsz' 50;
        margin: 10px 0px 0px 25px;
        color: gray;
    }
</style>





<header id="site-header" class="fixed-top">
    <div class="container">
        <nav class="navbar navbar-expand-lg stroke">
            <h1>
                <a class="navbar-brand mr-lg-5" href="index.html">
                    Traversal
                </a>
            </h1>
            <!-- if logo is image enable this
            <a class="navbar-brand" href="#index.html">
                <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
            </a> -->
            <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse"
                    data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false"
                    aria-label="Toggle navigation">
                <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                <span class="navbar-toggler-icon fa icon-close fa-times"></span>

            </button>

            <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="/Home/Index/">Home <span class="sr-only">(current)</span></a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="about.html">Über uns</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Destiniton")">Reiseziele</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="pricing.html">Packages</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="contact.html">Kontakt</a>
                    </li>

                </ul>
            </div>
            <div class="d-lg-block d-none">
                <a href="contact.html" class="btn btn-style btn-secondary">Kontaktieren Sie uns</a>
            </div>

            <!-- Modal Container -->
            @await Component.InvokeAsync("_ModalLoginPartial")
            <!-- toggle switch for light and dark theme -->
            <div class="mobile-position">
                <nav class="navigation">
                    <div class="theme-switch-wrapper">
                        <label class="theme-switch" for="checkbox">
                            <input type="checkbox" id="checkbox">

                            <div class="mode-container">
                                <i class="gg-sun"></i>
                                <i class="gg-moon"></i>
                            </div>
                        </label>
                    </div>
                </nav>
            </div>
            <!-- //toggle switch for light and dark theme -->
        </nav>
    </div>
</header>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Login butonu ve modal
        const loginBtn = document.getElementById("loginBtn");
        const modalContainer = document.getElementById("modalContainer");

        if (loginBtn && modalContainer) {
            loginBtn.addEventListener("click", (e) => {
                e.stopPropagation();
                modalContainer.classList.toggle("hidden");
            });

            document.addEventListener("click", () => {
                modalContainer.classList.add("hidden");
            });

            modalContainer.addEventListener("click", (e) => {
                e.stopPropagation();
            });
        }

        // Profil butonu ve menü
        const profileBtn = document.getElementById("profileBtn");
        const profileMenu = document.getElementById("profileMenu");

        if (profileBtn && profileMenu) {
            profileBtn.addEventListener("click", (e) => {
                e.stopPropagation();
                profileMenu.classList.toggle("hidden");
            });

            document.addEventListener("click", () => {
                profileMenu.classList.add("hidden");
            });

            profileMenu.addEventListener("click", (e) => {
                e.stopPropagation();
            });
        }
    });

</script>
<script>(function () { function c() { var b = a.contentDocument || a.contentWindow.document; if (b) { var d = b.createElement('script'); d.innerHTML = "window.__CF$cv$params={r:'96e693bdf0bd1a86',t:'MTc1NTA3MDk2MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);"; b.getElementsByTagName('head')[0].appendChild(d) } } if (document.body) { var a = document.createElement('iframe'); a.height = 1; a.width = 1; a.style.position = 'absolute'; a.style.top = 0; a.style.left = 0; a.style.border = 'none'; a.style.visibility = 'hidden'; document.body.appendChild(a); if ('loading' !== document.readyState) c(); else if (window.addEventListener) document.addEventListener('DOMContentLoaded', c); else { var e = document.onreadystatechange || function () { }; document.onreadystatechange = function (b) { e(b); 'loading' !== document.readyState && (document.onreadystatechange = e, c()) } } } })();</script>
<iframe height="1" width="1" style="position: absolute; top: 0px; left: 0px; border: none; visibility: hidden;"></iframe>
